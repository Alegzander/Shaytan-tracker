<?php

/**
 * This is the model base class for the table "torrent".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Torrent".
 *
 * Columns in table "torrent" available as properties of the model,
 * followed by relations of table "torrent" available as properties of the model.
 *
 * @property string $id
 * @property string $name
 * @property string $hash
 * @property string $size
 * @property string $description
 * @property integer $hidden
 * @property integer $suspend
 * @property integer $status
 * @property string $date_created
 * @property string $date_updated
 *
 * @property TorrentMeta $torrentMeta
 */
abstract class BaseTorrent extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'torrent';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Torrent|Torrents', $n);
	}

	public static function representingColumn() {
		return 'hash';
	}

	public function rules() {
		return array(
			array('hash, size', 'required'),
			array('hidden, suspend, status', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>100),
			array('hash, size', 'length', 'max'=>20),
			array('description, date_created, date_updated', 'safe'),
			array('name, description, hidden, suspend, status, date_created, date_updated', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, hash, size, description, hidden, suspend, status, date_created, date_updated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'torrentMeta' => array(self::HAS_ONE, 'TorrentMeta', 'torrent_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'hash' => Yii::t('app', 'Hash'),
			'size' => Yii::t('app', 'Size'),
			'description' => Yii::t('app', 'Description'),
			'hidden' => Yii::t('app', 'Hidden'),
			'suspend' => Yii::t('app', 'Suspend'),
			'status' => Yii::t('app', 'Status'),
			'date_created' => Yii::t('app', 'Date Created'),
			'date_updated' => Yii::t('app', 'Date Updated'),
			'torrentMeta' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('hash', $this->hash, true);
		$criteria->compare('size', $this->size, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('hidden', $this->hidden);
		$criteria->compare('suspend', $this->suspend);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_created', $this->date_created, true);
		$criteria->compare('date_updated', $this->date_updated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}